1. Select all Elasticsearch indices
------------------------------------
GET /_cat/indices

2. View Schema Definition
-------------------------
GET apilogs*/_mappings

3. Get all documents in an index
--------------------------------
GET apilogs*/_search

4. Delete a daily index
-----------------------
DELETE /apilogs-2022.08.30

5. Delete all Documents in an Index
-----------------------------------
POST apilogs*/_delete_by_query?conflicts=proceed
{
  "query": {
    "match_all": {}
  }
}

6. Delete a Document by ID
--------------------------
POST apilogs*/_delete_by_query
{
  "query": {
    "match": {
      "id": "c59addf2-8b82-1015-c34b-92b8dee2df9b"
    }
  }
}

7. Delete all Documents where a field is missing / null
-------------------------------------------------------
POST apilogs*/_delete_by_query
{
  "query": {
    "bool": {
      "must_not": {
        "exists": {
          "field": "operationName"
        }
      }
    }
  }
}

8. Delete all entries older than a Time to Live
-----------------------------------------------
POST apilogs*/_delete_by_query
{
  "query": {
    "range": {
      "utcTime": {
        "lte": "now-100d"
      }
    }
  }
}

9. Rename a Field
------------------
Use update by query, to rename sessionId to batchId:

POST apilogs*/_update_by_query
{
  "query": {
    "bool": {
      "must_not": {
        "exists": {
          "field": "batchId"
        }
      }
    }
  },
  "script" : {
    "source": "ctx._source.batchId = ctx._source.sessionId; ctx._source.remove(\"sessionId\");"
    }
}

10. Delete a Field
-------------------
Use update by query:

POST apilogs*/_update_by_query
{
  "query": {
    "bool": {
      "must": [
        {
          "exists": {
            "field": "operationName"
          }
        }
      ]
    }
  },
  "script" : {
    "source": "ctx._source.remove(\"operationName\");"
    }
}
